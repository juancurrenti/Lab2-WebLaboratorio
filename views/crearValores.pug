extends layout

block content
  head
    title Valores de Referencia
    link(href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet")
    script(src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js")

  div.container.margin-top-custom
    h1  Valores de Referencia

    // Buscar Determinación
    div.form-group
      label(for="buscar_determinacion") Buscar Determinación:
      input#buscar_determinacion(type="text" class="form-control" placeholder="Escribe para buscar..." autocomplete="off")

      // Contenedor para mostrar resultados de búsqueda
      div#resultados_busqueda(style="position: absolute; z-index: 1000; display: none;")
        ul#lista_resultados(style="list-style: none; padding: 0; margin: 0;")
          each determinacion in determinaciones
            li(class="resultado" data-id=determinacion.id_Determinacion data-unidad=determinacion.unidadMedida.nombreUnidadMedida data-examen=determinacion.examen.nombre_examen) 
             | #{determinacion.Nombre_Determinacion}  - Examen: #{determinacion.examen.nombre_examen}

      // Select para las determinaciones (opciones ocultas)
      select#id_Determinacion(name="id_Determinacion" class="form-control" required style="display: none;")
        each determinacion in determinaciones
          option(value=determinacion.id_Determinacion data-unidad=determinacion.unidadMedida.nombreUnidadMedida data-examen=determinacion.examen.nombre_examen) 
           | #{determinacion.Nombre_Determinacion} - Examen: #{determinacion.examen.nombre_examen}



    // Tabla de Valores de Referencia
    div.mt-4
      h3 Valores de Referencia 
      table.table.table-bordered#valoresReferenciaTable
        thead
          tr
            th Edad Mínima
            th Edad Máxima
            th Sexo
            th Valor Mínimo
            th Valor Máximo
            th Estado
            th Unidad de Medida
            th Acción
        tbody#valoresReferenciaBody
          // Aquí se insertarán las filas dinámicamente

      // Botón para agregar un nuevo valor de referencia
      button.btn.btn-primary.mt-2#addValorReferencia(type="button" style="display: none") Agregar Valor de Referencia

      // Botón para guardar valores de referencia
      button.btn.btn-success.mt-2#saveValoresReferencia(type="button" style="display: none") Guardar Valores de Referencia

    // Modal de Confirmación de Datos
    .modal#confirmationModal(tabindex="-1" role="dialog")
      .modal-dialog(role="document")
        .modal-content
          .modal-header
            h5.modal-title Confirmación de Datos
            button.close(type="button" data-bs-dismiss="modal" aria-label="Close")
              span(aria-hidden="true") &times;
          .modal-body
            p#modalContent Aquí aparecerán los datos a enviar.
          .modal-footer
            button.btn.btn-secondary(type="button" data-bs-dismiss="modal") Cancelar
            button.btn.btn-primary(type="button" id="confirmSubmit") Confirmar

    // Modal de Confirmación de Eliminación
    .modal#deleteModal(tabindex="-1" role="dialog")
      .modal-dialog(role="document")
        .modal-content
          .modal-header
            h5.modal-title Confirmación de Eliminación
            button.close(type="button" data-bs-dismiss="modal" aria-label="Close")
              span(aria-hidden="true") &times;
          .modal-body
            p#deleteModalContent ¿Estás seguro de eliminar el valor de referencia?
          .modal-footer
            button.btn.btn-secondary(type="button" data-bs-dismiss="modal") Cancelar
            button.btn.btn-danger(type="button" id="confirmDelete") Eliminar

    script.
      $(document).ready(function() {
        const determinaciones = !{JSON.stringify(determinaciones)};
        let idValorReferenciaAEliminar = null;
        const examen = $(this).data('examen');
        $('#examen_nombre').text(examen);
        // Buscar determinación
        $('#buscar_determinacion').on('input', function() {
          const query = $(this).val().toLowerCase();
          $('#lista_resultados').empty();

          if (query.length > 0) {
            determinaciones.forEach(d => {
              if (d.Nombre_Determinacion.toLowerCase().includes(query)) {
                $('#lista_resultados').append(`<li class="resultado" 
                  data-id="${d.id_Determinacion}" 
                  data-unidad="${d.unidadMedida.nombreUnidadMedida}"
                  data-examen="${d.examen.nombre_examen}">
                  ${d.Nombre_Determinacion} - Examen: ${d.examen.nombre_examen}
                </li>`);
              }
            });

            $('#resultados_busqueda').show();
          } else {
            $('#resultados_busqueda').hide();
          }
        });

        // Seleccionar determinación
        $(document).on('click', '.resultado', async function() {
          const id = $(this).data('id');
          const unidadMedida = $(this).data('unidad');
          const nombre = $(this).text();
          const examen = $(this).data('examen');
          $('#id_Determinacion').val(id); // Establecer valor del select
          $('#buscar_determinacion').val(nombre); // Actualizar el input
          $('#unidad_medida').text(unidadMedida); // Mostrar unidad de medida
          $('#examen_nombre').text(examen); // Mostrar nombre del examen
          $('#resultados_busqueda').hide(); // Ocultar resultados

          // Obtener valores de referencia asociados a la determinación
          try {
            const response = await $.get(`/valoresreferencia/valores/${id}`);
            const valoresReferencia = response.valoresReferencia;

            $('#valoresReferenciaBody').empty(); // Limpiar tabla
            valoresReferencia.forEach(vr => addRow(vr, unidadMedida));

            $('#addValorReferencia, #saveValoresReferencia').show(); // Mostrar botones
          } catch (error) {
            console.error('Error al obtener los valores de referencia:', error);
            alert('Error al obtener los valores de referencia.');
          }
        });

        // Agregar nueva fila para valores de referencia
        $('#addValorReferencia').on('click', function() {
          const unidadMedida = $('#unidad_medida').text(); // Obtener la unidad de medida actual
          addRow({}, unidadMedida);
        });

        function addRow(vr = {}, unidadMedida = '') {
          const row = `
            <tr data-id="${vr.id_ValorReferencia || ''}">
              <td><input type="number" class="form-control" name="Edad_Minima" value="${vr.Edad_Minima || ''}" required></td>
              <td><input type="number" class="form-control" name="Edad_Maxima" value="${vr.Edad_Maxima || ''}" required></td>
              <td>
                <select class="form-control" name="Sexo" required>
                  <option value="M" ${vr.Sexo === 'M' ? 'selected' : ''}>Masculino</option>
                  <option value="F" ${vr.Sexo === 'F' ? 'selected' : ''}>Femenino</option>
                </select>
              </td>
              <td><input type="number" step="0.01" class="form-control" name="Valor_Referencia_Minimo" value="${vr.Valor_Referencia_Minimo || ''}" required></td>
              <td><input type="number" step="0.01" class="form-control" name="Valor_Referencia_Maximo" value="${vr.Valor_Referencia_Maximo || ''}" required></td>
              <td>
                <select class="form-control" name="Estado" required>
                  <option value="1" ${vr.Estado === 1 ? 'selected' : ''}>Activo</option>
                  <option value="0" ${vr.Estado === 0 ? 'selected' : ''}>Inactivo</option>
                </select>
              </td>
              <td>${unidadMedida}</td>
              <td>
                <button type="button" class="btn btn-danger btn-sm delete-row">Eliminar</button>
              </td>
            </tr>
          `;

          $('#valoresReferenciaBody').append(row);
        }

        // Confirmación de Eliminación
        $(document).on('click', '.delete-row', function() {
          const row = $(this).closest('tr');
          const id = row.data('id');
          

          // Mostrar modal
          if(!id){
            row.remove();
          }else{       
          idValorReferenciaAEliminar = id;
          const determinacionNombre = $('#buscar_determinacion').val();

          $('#deleteModalContent').text(`¿Estás seguro de eliminar el valor de referencia para la determinación "${determinacionNombre}"?`);
          const deleteModal = new bootstrap.Modal(document.getElementById('deleteModal'));
          deleteModal.show();
        }});

        // Confirmar eliminación
        $('#confirmDelete').on('click', function() {
          if (!idValorReferenciaAEliminar) {
            alert('Error al identificar el valor de referencia.');
            return;
          }

          $.ajax({
            url: `/valoresreferencia/eliminar/${idValorReferenciaAEliminar}`,
            method: 'DELETE',
            success: function(response) {
              alert('Valor de referencia eliminado con éxito.');
              location.reload();
            },
            error: function(error) {
              alert('Error al eliminar el valor de referencia.');
              console.error(error);
            },
          });
        });

        // Guardar valores de referencia
        $('#saveValoresReferencia').on('click', function() {
          const id_Determinacion = $('#id_Determinacion').val();

          if (!id_Determinacion) {
            alert('Por favor, selecciona una determinación.');
            return;
          }

          const rows = $('#valoresReferenciaBody tr');
          const valoresReferencia = [];
          let allFieldsValid = true;
          rows.each(function() {
          const row = $(this);
          const Edad_Minima = row.find('input[name="Edad_Minima"]').val();
          const Edad_Maxima = row.find('input[name="Edad_Maxima"]').val();
          const Sexo = row.find('select[name="Sexo"]').val();
          const Valor_Referencia_Minimo = row.find('input[name="Valor_Referencia_Minimo"]').val();
          const Valor_Referencia_Maximo = row.find('input[name="Valor_Referencia_Maximo"]').val();
          const Estado = row.find('select[name="Estado"]').val();     
          if(!Edad_Minima || !Edad_Maxima || !Sexo || !Valor_Referencia_Maximo || !Valor_Referencia_Minimo || !Estado){
            allFieldsValid = false;
            row.find('input, select').each(function () {
              if (!$(this).val()) {
                 $(this).addClass('is-invalid');
              } else {
                $(this).removeClass('is-invalid');
              }
            });
           } else {
      // Si los campos están completos, eliminar resaltado
           row.find('input, select').removeClass('is-invalid');
           }
               valoresReferencia.push({
                id_ValorReferencia: row.data('id') || null,
                Edad_Minima: Edad_Minima,
                Edad_Maxima: Edad_Maxima,
                Sexo: Sexo,
                Valor_Referencia_Minimo: Valor_Referencia_Minimo,
                Valor_Referencia_Maximo: Valor_Referencia_Maximo,
                Estado: parseInt(Estado, 10),
             });
           });
          if (!allFieldsValid) {
           alert('Por favor, completa todos los campos en las filas antes de guardar.');
           return;
          }
          if (valoresReferencia.length === 0) {
            alert('Debes agregar al menos un valor de referencia.');
            return;
          }

          // Prepara el contenido del modal
          const modalContent = valoresReferencia.map((vr, index) => `
            <strong>Valor ${index + 1}:</strong><br>
            Edad Mínima: ${vr.Edad_Minima}<br>
            Edad Máxima: ${vr.Edad_Maxima}<br>
            Sexo: ${vr.Sexo}<br>
            Valor Mínimo: ${vr.Valor_Referencia_Minimo}<br>
            Valor Máximo: ${vr.Valor_Referencia_Maximo}<br>
            Estado: ${vr.Estado === 1 ? 'Activo' : 'Inactivo'}<br><br>
          `).join('');

          $('#modalContent').html(modalContent);

          // Muestra el modal
          const modal = new bootstrap.Modal(document.getElementById('confirmationModal'));
          modal.show();

          // Confirmar envío
          $('#confirmSubmit').off('click').on('click', function() {
            $.ajax({
              url: '/valoresreferencia/guardar-valores',
              method: 'POST',
              contentType: 'application/json',
              data: JSON.stringify({ id_Determinacion, valoresReferencia }),
              success: function(response) {
                alert('Valores de referencia guardados con éxito.');
                location.reload();
              },
              error: function(error) {
                alert('Error al guardar los valores de referencia.');
                console.error(error);
              },
            });
          });
        });
      });

extends layout

block content
  head
    title Valores de Referencia

  .container-fluid.margin-top-custom
    h1.mt-4 Valores de Referencia
    #message-placeholder

    .form-group.position-relative
      label(for="buscar_determinacion") Buscar Determinación:
      input#buscar_determinacion.form-control(type="text" placeholder="Escribe para buscar…" autocomplete="off")
      #resultados_busqueda(style="position: absolute; top: 100%; left: 0; right: 0; z-index: 1000; display: none;")
        ul#lista_resultados.list-group
      select#id_Determinacion.form-control(name="id_Determinacion" required style="display: none;")
        each determinacion in determinaciones
          option(
            value=determinacion.id_Determinacion 
            data-unidad=determinacion.unidadMedida.nombreUnidadMedida 
            data-examen=determinacion.examen.nombre_examen
          )= determinacion.Nombre_Determinacion

    .mt-4
      h3 Valores de Referencia
      table#valoresReferenciaTable.table.table-bordered
        thead
          tr
            th Edad Mínima
            th Edad Máxima
            th Sexo
            th Valor Mínimo
            th Valor Máximo
            th Valor Esperado
            th Estado
            th Unidad de Medida
            th Acción
        tbody#valoresReferenciaBody

      button#addValorReferencia.btn.btn-primary.mt-2(type="button" style="display: none;") Agregar Valor de Referencia
      button#saveValoresReferencia.btn.btn-success.mt-2.ms-2(type="button" style="display: none;") Guardar Valores de Referencia
      a.btn.btn-secondary.mt-2.ms-2(href="javascript:history.back()") Volver

    // Modal Confirmación de Datos
    .modal.fade#confirmationModal(tabindex="-1" role="dialog")
      .modal-dialog(role="document")
        .modal-content
          .modal-header
            h5.modal-title Confirmación de Datos
            button.btn-close(type="button" data-bs-dismiss="modal" aria-label="Close")
          .modal-body
            div#modalContent
          .modal-footer
            button.btn.btn-secondary(type="button" data-bs-dismiss="modal") Cancelar
            button#confirmSubmit.btn.btn-primary(type="button") Confirmar

    // Modal para Confirmación de Eliminación o para mostrar Errores
    .modal.fade#deleteModal(tabindex="-1" role="dialog")
      .modal-dialog(role="document")
        .modal-content
          .modal-header
            h5.modal-title#deleteModalTitle Confirmación
            button.btn-close(type="button" data-bs-dismiss="modal" aria-label="Close")
          .modal-body
            p#deleteModalContent
          .modal-footer
            button.btn.btn-secondary(type="button" data-bs-dismiss="modal") Cerrar
            button#confirmDelete.btn.btn-danger(type="button") Eliminar

  script.
    $(function() {
      const determinaciones = !{JSON.stringify(determinaciones)};
      const unidadesCualitativas = ['Positivo / Negativo', 'Reactivo / No Reactivo', 'Ausencia / Presencia'];
      let unidadMedidaSeleccionada = '';
      let idValorReferenciaAEliminar = null;

      $('#buscar_determinacion').on('input', function() {
        const q = $(this).val().toLowerCase();
        const $lista = $('#lista_resultados').empty();
        if (q.length > 0) {
          determinaciones.forEach(d => {
            if (d.Nombre_Determinacion.toLowerCase().includes(q)) {
              $lista.append(`<li class="resultado list-group-item list-group-item-action" data-id="${d.id_Determinacion}" data-unidad="${d.unidadMedida.nombreUnidadMedida}" data-examen="${d.examen.nombre_examen}"><div><strong>${d.Nombre_Determinacion}</strong></div><div><small>Examen: ${d.examen.nombre_examen}</small></div></li>`);
            }
          });
          $('#resultados_busqueda').show();
        } else {
          $('#resultados_busqueda').hide();
        }
      });

      $(document).on('click', '.resultado', async function() {
        const id = $(this).data('id');
        unidadMedidaSeleccionada = $(this).data('unidad');
        const nombreCompleto = `${$(this).find('strong').text()} (Examen: ${$(this).data('examen')})`;
        $('#id_Determinacion').val(id);
        $('#buscar_determinacion').val(nombreCompleto);
        $('#resultados_busqueda').hide();
        try {
          const response = await $.get(`/valoresreferencia/valores/${id}`);
          $('#valoresReferenciaBody').empty();
          response.valoresReferencia.forEach(vr => addRow(vr, unidadMedidaSeleccionada));
          $('#addValorReferencia, #saveValoresReferencia, #volverBtn').show();
        } catch (error) {
          console.error('Error al obtener los valores de referencia:', error);
        }
      });

      $('#addValorReferencia').on('click', function() {
        addRow({}, unidadMedidaSeleccionada);
      });

      function addRow(vr = {}, unidadMedida = '') {
        const esCualitativa = unidadesCualitativas.includes(unidadMedida);
        
        let valorFieldsHtml = '';
        let valorEsperadoHtml = '';

        if (esCualitativa) {
          const opciones = unidadMedida.split(' / ');
          let opcionesHtml = `<option value="">Seleccione...</option>`;
          opciones.forEach(op => {
            opcionesHtml += `<option value="${op}" ${vr.Valor_Esperado === op ? 'selected' : ''}>${op}</option>`;
          });
          valorFieldsHtml = `<td><input type="number" class="form-control" disabled></td><td><input type="number" class="form-control" disabled></td>`;
          valorEsperadoHtml = `<td><select class="form-control" name="Valor_Esperado" required>${opcionesHtml}</select></td>`;
        } else {
          valorFieldsHtml = `
            <td><input type="number" step="0.01" class="form-control" name="Valor_Referencia_Minimo" value="${vr.Valor_Referencia_Minimo != null ? vr.Valor_Referencia_Minimo : ''}" required></td>
            <td><input type="number" step="0.01" class="form-control" name="Valor_Referencia_Maximo" value="${vr.Valor_Referencia_Maximo != null ? vr.Valor_Referencia_Maximo : ''}" required></td>`;
          valorEsperadoHtml = `<td><select class="form-control" disabled><option>N/A</option></select></td>`;
        }

        const row = `
          <tr data-id="${vr.id_ValorReferencia || ''}">
            <td><input type="number" class="form-control" name="Edad_Minima" value="${vr.Edad_Minima != null ? vr.Edad_Minima : ''}" required></td>
            <td><input type="number" class="form-control" name="Edad_Maxima" value="${vr.Edad_Maxima != null ? vr.Edad_Maxima : ''}" required></td>
            <td><select class="form-control" name="Sexo" required><option value="M" ${vr.Sexo==='M'?'selected':''}>Masculino</option><option value="F" ${vr.Sexo==='F'?'selected':''}>Femenino</option><option value="A" ${vr.Sexo==='A'?'selected':''}>Ambos Sexos</option></select></td>
            ${valorFieldsHtml}
            ${valorEsperadoHtml}
            <td><select class="form-control" name="Estado" required><option value="1" ${vr.Estado === 1 || vr.Estado === undefined ? 'selected' : ''}>Activo</option><option value="0" ${vr.Estado === 0 ? 'selected' : ''}>Inactivo</option></select></td>
            <td>${unidadMedida}</td>
            <td><button type="button" class="btn btn-danger btn-sm delete-row">Eliminar</button></td>
          </tr>`;
        $('#valoresReferenciaBody').append(row);
      }

      $(document).on('click', '.delete-row', function() {
        const row = $(this).closest('tr');
        const id = row.data('id');
        if (!id) {
          row.remove();
        } else {
          idValorReferenciaAEliminar = id;
          $('#deleteModalTitle').text('Confirmar Eliminación');
          $('#deleteModalContent').text('¿Estás seguro de eliminar este valor de referencia?');
          $('#confirmDelete').show();
          new bootstrap.Modal($('#deleteModal')[0]).show();
        }
      });

      $('#confirmDelete').on('click', function() {
        if (!idValorReferenciaAEliminar) return;
        $.ajax({ url:`/valoresreferencia/eliminar/${idValorReferenciaAEliminar}`, method:'DELETE',
          success: function() { location.reload(); },
          error: function(err) { console.error(err); }
        });
      });

      $('#saveValoresReferencia').on('click', function() {
        const rows = $('#valoresReferenciaBody tr');
        let modalHtml = '<h5>Resumen de los valores a guardar:</h5>';
        const esCualitativa = unidadesCualitativas.includes(unidadMedidaSeleccionada);

        rows.each(function(index) {
          const r = $(this);
          const edadMin = r.find('input[name="Edad_Minima"]').val();
          const edadMax = r.find('input[name="Edad_Maxima"]').val();
          const sexo = r.find('select[name="Sexo"] option:selected').text();
          
          modalHtml += `<div class="mb-2 p-2 border rounded"><strong>Referencia ${index + 1}:</strong><br>`;
          modalHtml += `Edad: ${edadMin} - ${edadMax}<br>`;
          modalHtml += `Sexo: ${sexo}<br>`;

          if (esCualitativa) {
            const valorEsperado = r.find('select[name="Valor_Esperado"]').val();
            modalHtml += `Valor Esperado: <strong>${valorEsperado}</strong>`;
          } else {
            const valMin = r.find('input[name="Valor_Referencia_Minimo"]').val();
            const valMax = r.find('input[name="Valor_Referencia_Maximo"]').val();
            modalHtml += `Rango: <strong>${valMin} - ${valMax}</strong>`;
          }
          modalHtml += `</div>`;
        });
        
        $('#modalContent').html(modalHtml);
        new bootstrap.Modal($('#confirmationModal')[0]).show();
      });

      $('#confirmSubmit').off('click').on('click', function() {
        const idDet = $('#id_Determinacion').val();
        const valoresReferencia = [];
        const esCualitativa = unidadesCualitativas.includes(unidadMedidaSeleccionada);

        $('#valoresReferenciaBody tr').each(function() {
          const r = $(this);
          const data = {
            id_ValorReferencia: r.data('id') || null,
            Edad_Minima: r.find('input[name="Edad_Minima"]').val(),
            Edad_Maxima: r.find('input[name="Edad_Maxima"]').val(),
            Sexo: r.find('select[name="Sexo"]').val(),
            Estado: parseInt(r.find('select[name="Estado"]').val(), 10)
          };

          if (esCualitativa) {
            data.Valor_Esperado = r.find('select[name="Valor_Esperado"]').val();
          } else {
            data.Valor_Referencia_Minimo = r.find('input[name="Valor_Referencia_Minimo"]').val();
            data.Valor_Referencia_Maximo = r.find('input[name="Valor_Referencia_Maximo"]').val();
          }
          valoresReferencia.push(data);
        });

        $.ajax({
          url:'/valoresreferencia/guardar-valores',
          method:'POST',
          contentType:'application/json',
          data:JSON.stringify({ id_Determinacion:idDet, valoresReferencia: valoresReferencia })
        })
        .done(function() {
          location.reload();
        })
        .fail(function(jqXHR) {
          const modal = bootstrap.Modal.getInstance(document.getElementById('confirmationModal'));
          if (modal) modal.hide();
          
          const errorMsg = jqXHR.responseJSON ? jqXHR.responseJSON.error : "Ocurrió un error inesperado.";
          
          $('#deleteModalTitle').text('Error de Validación');
          $('#deleteModalContent').text(errorMsg);
          $('#confirmDelete').hide();
          new bootstrap.Modal($('#deleteModal')[0]).show();
        });
      });
    });
extends layout

block content
  head
    title Valores de Referencia
    link(href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet")
    script(src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js")

  .container.margin-top-custom
    h1.mt-4 Valores de Referencia

    // Buscar Determinación
    .form-group.position-relative
      label(for="buscar_determinacion") Buscar Determinación:
      input#buscar_determinacion.form-control(type="text" placeholder="Escribe para buscar…" autocomplete="off")

      // Resultados de búsqueda ocultos
      #resultados_busqueda(style="position: absolute; top: 100%; left: 0; right: 0; z-index: 1000; display: none;")
        ul#lista_resultados.list-group

      // Select oculto
      select#id_Determinacion.form-control(name="id_Determinacion" required style="display: none;")
        each determinacion in determinaciones
          option(value=determinacion.id_Determinacion data-unidad=determinacion.unidadMedida.nombreUnidadMedida data-examen=determinacion.examen.nombre_examen)
            | #{determinacion.Nombre_Determinacion} - Examen: #{determinacion.examen.nombre_examen}

    // Tabla de Valores de Referencia
    .mt-4
      h3 Valores de Referencia
      table#valoresReferenciaTable.table.table-bordered
        thead
          tr
            th Edad Mínima
            th Edad Máxima
            th Sexo
            th Valor Mínimo
            th Valor Máximo
            th Estado
            th Unidad de Medida
            th Acción
        tbody#valoresReferenciaBody

      button#addValorReferencia.btn.btn-primary.mt-2(type="button" style="display: none;") Agregar Valor de Referencia
      button#saveValoresReferencia.btn.btn-success.mt-2(type="button" style="display: none;") Guardar Valores de Referencia

    // Modal Confirmación de Datos
    .modal#confirmationModal(tabindex="-1" role="dialog")
      .modal-dialog(role="document")
        .modal-content
          .modal-header
            h5.modal-title Confirmación de Datos
            button.close(type="button" data-bs-dismiss="modal" aria-label="Close")
              span(aria-hidden="true") ×
          .modal-body
            p#modalContent Aquí aparecerán los datos a enviar.
          .modal-footer
            button.btn.btn-secondary(type="button" data-bs-dismiss="modal") Cancelar
            button#confirmSubmit.btn.btn-primary(type="button") Confirmar

    // Modal Confirmación de Eliminación
    .modal#deleteModal(tabindex="-1" role="dialog")
      .modal-dialog(role="document")
        .modal-content
          .modal-header
            h5.modal-title Confirmación de Eliminación
            button.close(type="button" data-bs-dismiss="modal" aria-label="Close")
              span(aria-hidden="true") ×
          .modal-body
            p#deleteModalContent ¿Estás seguro de eliminar el valor de referencia?
          .modal-footer
            button.btn.btn-secondary(type="button" data-bs-dismiss="modal") Cancelar
            button#confirmDelete.btn.btn-danger(type="button") Eliminar

    script.
      $(function() {
        const determinaciones = !{JSON.stringify(determinaciones)};

        // Buscar determinación
        $('#buscar_determinacion').on('input', function() {
          const q = $(this).val().toLowerCase();
          const $lista = $('#lista_resultados').empty();

          if (q.length > 0) {
            determinaciones.forEach(d => {
              if (d.Nombre_Determinacion.toLowerCase().includes(q)) {
                $lista.append(`
                  <li
                    class="resultado list-group-item list-group-item-action"
                    data-id="${d.id_Determinacion}"
                    data-unidad="${d.unidadMedida.nombreUnidadMedida}"
                    data-examen="${d.examen.nombre_examen}"
                  >
                    <div><strong>${d.Nombre_Determinacion}</strong></div>
                    <div><small>Examen: ${d.examen.nombre_examen}</small></div>
                  </li>
                `);
              }
            });
            $('#resultados_busqueda').show();
          } else {
            $('#resultados_busqueda').hide();
          }
        });

        // Seleccionar determinación
        $(document).on('click', '.resultado', async function() {
          const id = $(this).data('id');
          const unidadMedida = $(this).data('unidad');
          const nombre = $(this).text();
          const examen = $(this).data('examen');
          $('#id_Determinacion').val(id);
          $('#buscar_determinacion').val(nombre);
          $('#unidad_medida').text(unidadMedida);
          $('#examen_nombre').text(examen);
          $('#resultados_busqueda').hide();

          try {
            const response = await $.get(`/valoresreferencia/valores/${id}`);
            const valoresReferencia = response.valoresReferencia;
            $('#valoresReferenciaBody').empty();
            valoresReferencia.forEach(vr => addRow(vr, unidadMedida));
            $('#addValorReferencia, #saveValoresReferencia').show();
          } catch (error) {
            console.error('Error al obtener los valores de referencia:', error);
          }
        });

        // Agregar fila
        $('#addValorReferencia').on('click', function() {
          addRow({}, $('#unidad_medida').text());
        });

        function addRow(vr={}, unidadMedida='') {
          const row = `
            <tr data-id="${vr.id_ValorReferencia||''}">
              <td><input type="number" class="form-control" name="Edad_Minima" value="${vr.Edad_Minima||''}" required></td>
              <td><input type="number" class="form-control" name="Edad_Maxima" value="${vr.Edad_Maxima||''}" required></td>
              <td><select class="form-control" name="Sexo" required>
                  <option value="M" ${vr.Sexo==='M'?'selected':''}>Masculino</option>
                  <option value="F" ${vr.Sexo==='F'?'selected':''}>Femenino</option>
                  <option value="A" ${vr.Sexo==='A'?'selected':''}>Ambos Sexos</option>
                </select></td>
              <td><input type="number" step="0.01" class="form-control" name="Valor_Referencia_Minimo" value="${vr.Valor_Referencia_Minimo||''}" required></td>
              <td><input type="number" step="0.01" class="form-control" name="Valor_Referencia_Maximo" value="${vr.Valor_Referencia_Maximo||''}" required></td>
              <td><select class="form-control" name="Estado" required>
                  <option value="1" ${vr.Estado===1?'selected':''}>Activo</option>
                  <option value="0" ${vr.Estado===0?'selected':''}>Inactivo</option>
                </select></td>
              <td>${unidadMedida}</td>
              <td><button type="button" class="btn btn-danger btn-sm delete-row">Eliminar</button></td>
            </tr>`;
          $('#valoresReferenciaBody').append(row);
        }

        // Confirmar eliminación
        $(document).on('click', '.delete-row', function() {
          const row = $(this).closest('tr');
          const id = row.data('id');
          if (!id) {
            row.remove();
          } else {
            idValorReferenciaAEliminar = id;
            $('#deleteModalContent').text(`¿Estás seguro de eliminar el valor de referencia para "${$('#buscar_determinacion').val()}"?`);
            new bootstrap.Modal($('#deleteModal')[0]).show();
          }
        });

        $('#confirmDelete').on('click', function() {
          if (!idValorReferenciaAEliminar) return;
          $.ajax({ url:`/valoresreferencia/eliminar/${idValorReferenciaAEliminar}`, method:'DELETE',
            success: function() { location.reload(); },
            error: function(err) { console.error(err); }
          });
        });

        // Guardar valores
        $('#saveValoresReferencia').on('click', function() {
          const idDet = $('#id_Determinacion').val();
          if (!idDet) return;
          const rows = $('#valoresReferenciaBody tr');
          const valoresReferencia = [];
          let allValid = true;
          rows.each(function() {
            const r = $(this);
            const min = r.find('input[name="Edad_Minima"]').val();
            const max = r.find('input[name="Edad_Maxima"]').val();
            const sex = r.find('select[name="Sexo"]').val();
            const vMin = r.find('input[name="Valor_Referencia_Minimo"]').val();
            const vMax = r.find('input[name="Valor_Referencia_Maximo"]').val();
            const est = r.find('select[name="Estado"]').val();
            if (!min||!max||!sex||!vMin||!vMax||!est) {
              allValid = false;
              r.find('input,select').each(function(){ if(!$(this).val()) $(this).addClass('is-invalid'); });
            } else {
              r.find('input,select').removeClass('is-invalid');
              valoresReferencia.push({
                id_ValorReferencia: r.data('id')||null,
                Edad_Minima:min,
                Edad_Maxima:max,
                Sexo:sex,
                Valor_Referencia_Minimo:vMin,
                Valor_Referencia_Maximo:vMax,
                Estado:parseInt(est,10)
              });
            }
          });
          if (!allValid) return;
          if (!valoresReferencia.length) return;

          const resumen = valoresReferencia.map((vr,i)=>`
            <strong>Valor ${i+1}:</strong><br>
            Edad Mín:${vr.Edad_Minima}<br>
            Edad Máx:${vr.Edad_Maxima}<br>
            Sexo:${vr.Sexo}<br>
            Valor Min:${vr.Valor_Referencia_Minimo}<br>
            Valor Máx:${vr.Valor_Referencia_Maximo}<br>
            Estado:${vr.Estado===1?'Activo':'Inactivo'}<br><br>
          `).join('');
          $('#modalContent').html(resumen);
          new bootstrap.Modal($('#confirmationModal')[0]).show();

          $('#confirmSubmit').off('click').on('click', function() {
            $.ajax({
              url:'/valoresreferencia/guardar-valores', method:'POST', contentType:'application/json',
              data:JSON.stringify({ id_Determinacion:idDet, valoresReferencia }),
              success:function(){ location.reload(); },
              error:function(err){ console.error(err); }
            });
          });
        });
      });
